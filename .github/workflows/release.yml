name: Create Release
on:
  push:
    tags:
      - 'v*.*.*'

jobs:
  release:
   name: Release
   runs-on: ubuntu-latest
   steps:
      - name: Install packages
        run: sudo apt install zip

      - name: Checkout
        uses: actions/checkout@v4
        with:
           fetch-depth: 0
           ref: main
      
      - uses: pnpm/action-setup@v4
        with:
          version: 9
      
      - name: Setup node
        uses: actions/setup-node@v4
        with:
          node-version: 18.x
          cache: "pnpm"
          cache-dependency-path: "web/pnpm-lock.yaml"

      - name: Set env
        run: echo "RELEASE_VERSION=${GITHUB_REF#refs/*/}" >> $GITHUB_ENV
      
      - name: Install dependencies
        run: pnpm install
        working-directory: web

      - name: Build
        run: pnpm build
        working-directory: web
      
      - name: Bump manifest version
        run: node .github/actions/bump-manifest-version.js
        env:
          TGT_RELEASE_VERSION: ${{ github.ref_name }}
      
      - name: Push manifest changes
        uses: EndBug/add-and-commit@v9
        with:
          add: "fxmanifest.lua"
          push: false
          message: "chore: bump manifest version to ${{ env.RELEASE_VERSION }}"
          author_name: Manifest Bump
          author_email: 41898282+github-actions[bot]@users.noreply.github.com

      - name: Pull changes
        run: |
            git config --global user.name 'thoo0224'
            git config --global user.email 'thomasplatschorre@gmail.com'
            git pull origin main

      - name: Commit changes
        run: git push origin main
      
      - name: Update tag ref
        uses: EndBug/latest-tag@latest
        with:
          tag-name: ${{ github.ref_name }}
        
      - name: Bundle
        run: |
          mkdir -p ./temp/vx_lib/
          mkdir -p ./temp/vx_lib/web/
          cp ./{LICENSE,README.md,fxmanifest.lua,init.lua,loader.lua,types.lua,config.shared.lua,config.server.lua} ./temp/vx_lib/
          cp -r ./{bridge,modules,resource} ./temp/vx_lib/
          cp -r ./web/dist ./temp/vx_lib/web/
          cd ./temp && zip -r ../vx_lib.zip ./vx_lib
      
      - name: Create release
        uses: marvinpinto/action-automatic-releases@latest
        with:
          repo_token: ${{ secrets.GITHUB_TOKEN }}
          title: ${{ env.RELEASE_VERSION }}
          prerelease: false
          files: vx_lib.zip